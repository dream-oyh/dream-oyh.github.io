import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as r,c as s,d as t,b as e,a as o,w as p,e as c}from"./app-BelB4nhf.js";const d={},h=t("h1",{id:"产品吐槽",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#产品吐槽"},[t("span",null,"产品吐槽")])],-1),_=t("h2",{id:"pip",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#pip"},[t("span",null,"pip")])],-1),m=t("p",null,"问题 1：需要借用 Anaconda 进行虚拟环境管理，体量大，无形间将 Python 的磁盘占用率又提升了一个档次",-1),y=t("p",null,"问题 2：对包的依赖管理差。比如在安装“Pyinstaller”这个包时，pip 需要先安装这个包的依赖，但是在删除“Pyinstaller”时，并不会将其连带的依赖一并删除，导致虚拟环境中存在大量无用的依赖包，臃肿冗余。",-1),u=t("h2",{id:"qq",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#qq"},[t("span",null,"QQ")])],-1),g={href:"https://sunlogin.oray.com/",target:"_blank",rel:"noopener noreferrer"},x=t("li",null,"手机端文件缓存无阈值限制，只要是群聊图片都强制下载，每个语音，表情包，群聊图片，无一例外都强制缓存。。导致 QQ 的缓存需要隔一段时间清一次，还特别多",-1),Q=t("li",null,"视频播放插件，不能横屏，调整进度条和暂停误触几率极大，不能倍速，画质压缩大（虽然比微信好一点）",-1),f=t("li",null,"厘米秀，QQ 秀，个性装扮等乱七八糟的配件花里胡哨，而且还要强行占用内存，而不是作为插件让用户自行插入",-1),w=t("li",null,"QQ 电脑版往屏幕边缘吸附时，若鼠标稍微靠近，QQ 界面就会滑下来，影响其他操作，如果最小化，只剩右下角 QQ 图标，也不能用 alt+tab 调取页面。推荐使用 TIM，但是 TIM 电脑版又删减了频道功能，就不能做到两全吗啊喂！（现新版 QQ 已修复）",-1),P=t("li",null,"QQ 手机版群投票，和电脑群投票插件完全不一样，电脑可以找到经典的投票界面，而且极为隐蔽。而手机版的投票插件全是小程序为载体，从群聊中进入投票界面，设计完投票后还需要转发到该群聊中，麻烦",-1),k=t("li",null,"会员和超级会员的图标求求了，亮瞎眼，花里胡哨的",-1),b=t("li",null,"群文件下载大于 1G 的大文件时，下载速度没比百度网盘快多少，1M/s 的速度我会谢",-1),q=t("li",null,"手机查看压缩包，浏览网页，首推 QQ 浏览器，一不小心就会点到然后强行安装",-1),A=t("li",null,"QQ 电脑版语音电话有时候会存在 bug，通话双方都提示“对方麦克风未打开”，只能重新拨号",-1),T=c('<h2 id="word" tabindex="-1"><a class="header-anchor" href="#word"><span>word</span></a></h2><p>一款问题很多的富文本编辑器，因其上手门槛低，被广泛使用，但作为大学生最好要学会从 word 过渡到 latex 排版，掌握高级排版工具。word 存在的问题如下：</p><ol><li>兼容性。这是最大的问题，word 在不同版本、不同电脑之间都会存在兼容性问题，排版混乱，在其他工作电脑上无法正常预览。</li><li>公式编辑差。word 对公式编辑的能力极差，支持 latex 代码，但是 latex 源码转换成预览公式的过程很麻烦，不如 latex 来的直接。对于公式的排版也很复杂，一旦公式插入在行内，还存在行间距不统一的问题。</li><li>图表排版性能差。对图片、表格的排版很乱，即使使用“嵌入式”排版，也无法规避问题一中所言的兼容性问题。</li><li>大纲功能差。word 中“标题 1”“标题 2”等模板管理模式混乱，有时模板丢失，有时模板被莫名更改，很难管理。</li><li>表格样式管理差。我的电脑已经设置了 n 次“三式表”的样式，总会在很长时间后莫名其妙的消失，要重新编辑模板样式。</li></ol><h2 id="typst" tabindex="-1"><a class="header-anchor" href="#typst"><span>typst</span></a></h2><p>作为新兴的，以其门槛低、语法简单准备超越 latex 的语言，我第一次使用时感觉很不错，但是一旦到了写公式时，个人已经养成的 latex 习惯无法改成 typst 的语法，需要对 latex 语法和 typst 语法额外做区分，带来了不必要的麻烦，因此个人不选择用 typst。</p>',5);function v(E,N){const l=n("RouteLink"),a=n("ExternalLinkIcon");return r(),s("div",null,[h,_,t("p",null,[e("这是 Python 自带的包管理器，但是存在一定的问题，后将其弃用，改用"),o(l,{to:"/study/code/python.html#poetry-%E5%9C%A8%E7%94%A8"},{default:p(()=>[e("poetry")]),_:1})]),m,y,u,t("ol",null,[t("li",null,[e("远程控制桌面画质拉胯，甚至还有时候卡到无法操作，不是网络问题，语音通话都好好的，但是桌面控制拉胯的很。推荐用"),t("a",g,[e("向日葵"),o(a)]),e("远控电脑")]),x,Q,f,w,P,k,b,q,A]),T])}const L=i(d,[["render",v],["__file","weakness.html.vue"]]),M=JSON.parse('{"path":"/article/weakness.html","title":"产品吐槽","lang":"zh-CN","frontmatter":{"description":"产品吐槽 pip 这是 Python 自带的包管理器，但是存在一定的问题，后将其弃用，改用 问题 1：需要借用 Anaconda 进行虚拟环境管理，体量大，无形间将 Python 的磁盘占用率又提升了一个档次 问题 2：对包的依赖管理差。比如在安装“Pyinstaller”这个包时，pip 需要先安装这个包的依赖，但是在删除“Pyinstaller”时...","head":[["meta",{"property":"og:url","content":"https://dream-oyh.github.io/article/weakness.html"}],["meta",{"property":"og:site_name","content":"Dream_oyh 的 blog"}],["meta",{"property":"og:title","content":"产品吐槽"}],["meta",{"property":"og:description","content":"产品吐槽 pip 这是 Python 自带的包管理器，但是存在一定的问题，后将其弃用，改用 问题 1：需要借用 Anaconda 进行虚拟环境管理，体量大，无形间将 Python 的磁盘占用率又提升了一个档次 问题 2：对包的依赖管理差。比如在安装“Pyinstaller”这个包时，pip 需要先安装这个包的依赖，但是在删除“Pyinstaller”时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T14:32:00.000Z"}],["meta",{"property":"article:author","content":"OYH"}],["meta",{"property":"article:modified_time","content":"2024-02-17T14:32:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"产品吐槽\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-17T14:32:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OYH\\",\\"email\\":\\"19859860010@163.com\\"}]}"]]},"headers":[{"level":2,"title":"pip","slug":"pip","link":"#pip","children":[]},{"level":2,"title":"QQ","slug":"qq","link":"#qq","children":[]},{"level":2,"title":"word","slug":"word","link":"#word","children":[]},{"level":2,"title":"typst","slug":"typst","link":"#typst","children":[]}],"git":{"createdTime":1707929375000,"updatedTime":1708180320000,"contributors":[{"name":"dream同学0","email":"1399541701@qq.com","commits":2},{"name":"dream_linux","email":"1399541701@qq.com","commits":1}]},"readingTime":{"minutes":3.62,"words":1086},"filePathRelative":"article/weakness.md","localizedDate":"2024年2月14日","excerpt":"\\n<h2>pip</h2>\\n<p>这是 Python 自带的包管理器，但是存在一定的问题，后将其弃用，改用<a href=\\"/study/code/python.html#poetry-%E5%9C%A8%E7%94%A8\\" target=\\"_blank\\">poetry</a></p>\\n<p>问题 1：需要借用 Anaconda 进行虚拟环境管理，体量大，无形间将 Python 的磁盘占用率又提升了一个档次</p>\\n<p>问题 2：对包的依赖管理差。比如在安装“Pyinstaller”这个包时，pip 需要先安装这个包的依赖，但是在删除“Pyinstaller”时，并不会将其连带的依赖一并删除，导致虚拟环境中存在大量无用的依赖包，臃肿冗余。</p>","autoDesc":true}');export{L as comp,M as data};
