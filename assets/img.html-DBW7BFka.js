import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c as p,d as n,b as s,a as e,e as t}from"./app-3yd73UJo.js";const c={},r=n("h1",{id:"神经网络可视化工具",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#神经网络可视化工具"},[n("span",null,"神经网络可视化工具")])],-1),d=n("p",null,"在我学习 pytorch 文档学到残差神经网络的时候，我发现网络的 python 搭建已经不是一个难事了，难的应该是网络的设计，而 pytorch 学习文档提供了非常多现代卷积神经网络的实现，但是并没有为这些神经网络提供一个可视化的模型出来，这样对于初学者而言，并不能准确 get 到各种网络之间的区别与联系，所以我在想能不能有什么工具是能把这些网络可视化出来的。",-1),u=n("p",null,"第一个念头是数学建模时经常用到的 PPT，用 PPT 来画神经网络可视化，但是一想到要这么多的卷积核，还要保证相对尺寸符合实际，再想到全连接层满满的线条，我果断放弃了 PPT 作图，试着在 b 站上搜一搜有没有针对于神经网络的可视化工具，没想到还真有，而且很多很丰富。所以我单开了这一部分内容，来呈现好用的可视化工具以及其做出的效果。",-1),h=n("h2",{id:"参考资料",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考资料"},[n("span",null,"参考资料")])],-1),m={href:"https://www.bilibili.com/video/BV1TV4y1P7AP",target:"_blank",rel:"noopener noreferrer"},k={id:"nn-svg",tabindex:"-1"},v={class:"header-anchor",href:"#nn-svg"},g={href:"https://alexlenail.me/NN-SVG/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"该网站提供了全连接层、LeNet 和 AlexNet 类型的网络可视化，类型比较受限，但是入手门槛低，参数调整直观方便，对于这三类模型的画图还是挺不错的。",-1),_={id:"plotneuralnet",tabindex:"-1"},y={class:"header-anchor",href:"#plotneuralnet"},f={href:"https://github.com/HarisIqbal88/PlotNeuralNet",target:"_blank",rel:"noopener noreferrer"},x=n("h3",{id:"getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-started"},[n("span",null,"Getting started")])],-1),N=n("p",null,"环境要求",-1),q={href:"https://miktex.org/download",target:"_blank",rel:"noopener noreferrer"},P=n("li",null,"installed git",-1),w=n("li",null,[n("p",null,"clone 项目")],-1),T=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone git@github.com:HarisIqbal88/PlotNeuralNet.git
<span class="token builtin class-name">cd</span> PlotNeuralNet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行示例</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> pyexamples/
<span class="token function">bash</span> <span class="token punctuation">..</span>/tikzmake.sh test_simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),V={class:"hint-container details"},S=n("summary",null,"报错：xdg-open: command not found on Win",-1),$={href:"https://github.com/HarisIqbal88/PlotNeuralNet/issues/98",target:"_blank",rel:"noopener noreferrer"},z=t(`<p>我对<code>tikzmake.sh</code>中的代码进行了修改，修改后如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python <span class="token variable">$1</span>.py
pdflatex <span class="token variable">$1</span>.tex

<span class="token function">rm</span> *.aux *.log *.vscodeLog
<span class="token function">rm</span> *.tex

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$OSTYPE</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;darwin&quot;</span>* <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">open</span> <span class="token variable">$1</span>.pdf
<span class="token keyword">elif</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token environment constant">$OSTYPE</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;linux-gnu&quot;</span>* <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">xdg-open</span> <span class="token variable">$1</span>.pdf
<span class="token keyword">else</span>
    start <span class="token variable">$1</span>.pdf
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),G=t(`<h3 id="modify" tabindex="-1"><a class="header-anchor" href="#modify"><span>Modify</span></a></h3><p>本项目从本质上来说是用 latex 写的，所以可以通过 shell 控制 tex 文件，进入<code>/pycore/tikzeng.py</code>文件，修改<code>to_generate()</code>函数。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">to_generate</span><span class="token punctuation">(</span> arch<span class="token punctuation">,</span> pathname<span class="token operator">=</span><span class="token string">&quot;file.tex&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>pathname<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> 
        <span class="token keyword">for</span> c <span class="token keyword">in</span> arch<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span> c <span class="token punctuation">)</span>
     
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&quot;pdflatex&quot;</span><span class="token operator">+</span>pathname<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;*.log&quot;</span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;*.aux&quot;</span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&quot;*.tex&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以不需要调用脚本文件，直接运行 python 程序并渲染出图像。</p>`,4);function E(H,I){const a=l("ExternalLinkIcon");return i(),p("div",null,[r,d,u,h,n("p",null,[n("a",m,[s("同济子豪兄视频"),e(a)])]),n("h2",k,[n("a",v,[n("span",null,[n("a",g,[s("NN-SVG"),e(a)])])])]),b,n("h2",_,[n("a",y,[n("span",null,[n("a",f,[s("PlotNeuralNet"),e(a)])])])]),x,n("ul",null,[n("li",null,[N,n("ul",null,[n("li",null,[s("installed "),n("a",q,[s("MikTex"),e(a)])]),P])]),w]),T,n("details",V,[S,n("p",null,[s("Github 原仓库中已经有"),n("a",$,[s("issue"),e(a)])]),z]),G])}const L=o(c,[["render",E],["__file","img.html.vue"]]),M=JSON.parse('{"path":"/code/python/pytorch/img.html","title":"神经网络可视化工具","lang":"zh-CN","frontmatter":{"description":"神经网络可视化工具 在我学习 pytorch 文档学到残差神经网络的时候，我发现网络的 python 搭建已经不是一个难事了，难的应该是网络的设计，而 pytorch 学习文档提供了非常多现代卷积神经网络的实现，但是并没有为这些神经网络提供一个可视化的模型出来，这样对于初学者而言，并不能准确 get 到各种网络之间的区别与联系，所以我在想能不能有什么工...","head":[["meta",{"property":"og:url","content":"https://dream-oyh.github.io/code/python/pytorch/img.html"}],["meta",{"property":"og:site_name","content":"Dream_oyh 的 blog"}],["meta",{"property":"og:title","content":"神经网络可视化工具"}],["meta",{"property":"og:description","content":"神经网络可视化工具 在我学习 pytorch 文档学到残差神经网络的时候，我发现网络的 python 搭建已经不是一个难事了，难的应该是网络的设计，而 pytorch 学习文档提供了非常多现代卷积神经网络的实现，但是并没有为这些神经网络提供一个可视化的模型出来，这样对于初学者而言，并不能准确 get 到各种网络之间的区别与联系，所以我在想能不能有什么工..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-29T14:26:05.000Z"}],["meta",{"property":"article:author","content":"OYH"}],["meta",{"property":"article:modified_time","content":"2024-02-29T14:26:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"神经网络可视化工具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-29T14:26:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OYH\\",\\"email\\":\\"19859860010@163.com\\"}]}"]]},"headers":[{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"NN-SVG","slug":"nn-svg","link":"#nn-svg","children":[]},{"level":2,"title":"PlotNeuralNet","slug":"plotneuralnet","link":"#plotneuralnet","children":[{"level":3,"title":"Getting started","slug":"getting-started","link":"#getting-started","children":[]},{"level":3,"title":"Modify","slug":"modify","link":"#modify","children":[]}]}],"git":{"createdTime":1709037353000,"updatedTime":1709216765000,"contributors":[{"name":"dream同学0","email":"1399541701@qq.com","commits":2}]},"readingTime":{"minutes":1.9,"words":570},"filePathRelative":"code/python/pytorch/img.md","localizedDate":"2024年2月27日","excerpt":"\\n<p>在我学习 pytorch 文档学到残差神经网络的时候，我发现网络的 python 搭建已经不是一个难事了，难的应该是网络的设计，而 pytorch 学习文档提供了非常多现代卷积神经网络的实现，但是并没有为这些神经网络提供一个可视化的模型出来，这样对于初学者而言，并不能准确 get 到各种网络之间的区别与联系，所以我在想能不能有什么工具是能把这些网络可视化出来的。</p>\\n<p>第一个念头是数学建模时经常用到的 PPT，用 PPT 来画神经网络可视化，但是一想到要这么多的卷积核，还要保证相对尺寸符合实际，再想到全连接层满满的线条，我果断放弃了 PPT 作图，试着在 b 站上搜一搜有没有针对于神经网络的可视化工具，没想到还真有，而且很多很丰富。所以我单开了这一部分内容，来呈现好用的可视化工具以及其做出的效果。</p>","autoDesc":true}');export{L as comp,M as data};
