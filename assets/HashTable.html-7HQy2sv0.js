import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as l,c as i,d as a,b as s,a as m}from"./app-CwUGJ6Zj.js";const o="/images/data_structure/hash_table/logistic_view.png",r={},c=a("h1",{id:"hash-table",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#hash-table"},[a("span",null,"Hash Table")])],-1),h=a("p",null,[a("strong",null,"Hash Table"),s(": A abstract data structure that maps keys and values.")],-1),p=a("figure",null,[a("img",{src:o,alt:"",width:"200",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),d=a("p",null,[a("strong",null,"Hash Function"),s(": A "),a("strong",null,"hash function"),s(" is any function that can be used to map data of arbitrary size to fixed-size values (used for storage address), namely "),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"H"),a("mi",null,"a"),a("mi",null,"s"),a("mi",null,"h"),a("mo",{stretchy:"false"},"("),a("mi",null,"k"),a("mi",null,"e"),a("mi",null,"y"),a("mi",null,"s"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"A"),a("mi",null,"d"),a("mi",null,"d"),a("mi",null,"r"),a("mi",null,"e"),a("mi",null,"s"),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"Hash(keys)=Address")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mord mathnormal"},"s"),a("span",{class:"mord mathnormal"},"h"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal"},"eys"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"A"),a("span",{class:"mord mathnormal"},"dd"),a("span",{class:"mord mathnormal"},"ress")])])])],-1),u=a("ul",null,[a("li",null,[s("Hash function should be "),a("strong",null,"simple"),s(", to reduce the calculating time consumption.")]),a("li",null,[s("Hash function should be "),a("strong",null,"uniform"),s(",to avoid multiple values being mapped near the same address, and generating more hash collision.")])],-1),g=a("strong",null,"Hash Collision",-1),y={href:"https://en.wikipedia.org/wiki/Hash_collision",target:"_blank",rel:"noopener noreferrer"},b=a("h2",{id:"common-hash-functions",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#common-hash-functions"},[a("span",null,"Common Hash Functions")])],-1),f=a("h3",{id:"direct-addressing-method",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#direct-addressing-method"},[a("span",null,"Direct addressing method")])],-1),_=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mi",null,"H"),a("mi",null,"a"),a("mi",null,"s"),a("mi",null,"h"),a("mo",{stretchy:"false"},"("),a("mi",null,"K"),a("mi",null,"e"),a("mi",null,"y"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("mi",null,"a"),a("mo",null,"×"),a("mi",null,"K"),a("mi",null,"e"),a("mi",null,"y"),a("mo",null,"+"),a("mi",null,"b")]),a("annotation",{encoding:"application/x-tex"}," Hash(Key) = a\\times Key + b ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mord mathnormal"},"s"),a("span",{class:"mord mathnormal"},"h"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"Key"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"×"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"Key"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"b")])])])])],-1),x=a("p",null,"Applications: Keys are known. And the collection of the keys is consecutive and not",-1);function k(H,v){const t=n("ExternalLinkIcon");return l(),i("div",null,[c,h,p,d,u,a("p",null,[g,s(": When two distinct pieces of data in a hash table share the same hash value. The hash value in this case is derived from a hash function which takes a data input and returns a fixed length of bits.(From "),a("a",y,[s("Wikipedia"),m(t)]),s(")")]),b,f,_,x])}const A=e(r,[["render",k],["__file","HashTable.html.vue"]]),z=JSON.parse('{"path":"/study/DataStructure/HashTable.html","title":"Hash Table","lang":"zh-CN","frontmatter":{"date":"2024-07-22T00:00:00.000Z","tag":"data_structure","description":"Hash Table Hash Table: A abstract data structure that maps keys and values. Hash Function: A hash function is any function that can be used to map data of arbitrary size to fixe...","head":[["meta",{"property":"og:url","content":"https://dream-oyh.github.io/study/DataStructure/HashTable.html"}],["meta",{"property":"og:site_name","content":"Dream_oyh 的 blog"}],["meta",{"property":"og:title","content":"Hash Table"}],["meta",{"property":"og:description","content":"Hash Table Hash Table: A abstract data structure that maps keys and values. Hash Function: A hash function is any function that can be used to map data of arbitrary size to fixe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://dream-oyh.github.io/images/data_structure/hash_table/logistic_view.png =200x"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-22T14:59:49.000Z"}],["meta",{"property":"article:author","content":"OYH"}],["meta",{"property":"article:tag","content":"data_structure"}],["meta",{"property":"article:published_time","content":"2024-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-22T14:59:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hash Table\\",\\"image\\":[\\"https://dream-oyh.github.io/images/data_structure/hash_table/logistic_view.png =200x\\"],\\"datePublished\\":\\"2024-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-22T14:59:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OYH\\",\\"email\\":\\"19859860010@163.com\\"}]}"]]},"headers":[{"level":2,"title":"Common Hash Functions","slug":"common-hash-functions","link":"#common-hash-functions","children":[{"level":3,"title":"Direct addressing method","slug":"direct-addressing-method","link":"#direct-addressing-method","children":[]}]}],"git":{"createdTime":1721660389000,"updatedTime":1721660389000,"contributors":[{"name":"dream-oyh","email":"1399541701@qq.com","commits":1}]},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"study/DataStructure/HashTable.md","localizedDate":"2024年7月22日","excerpt":"\\n<p><strong>Hash Table</strong>: A abstract data structure that maps keys and values.</p>\\n<figure><img src=\\"/images/data_structure/hash_table/logistic_view.png\\" alt=\\"\\" width=\\"200\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p><strong>Hash Function</strong>: A <strong>hash function</strong> is any function that can be used to map data of arbitrary size to fixed-size values (used for storage address), namely <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>H</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo stretchy=\\"false\\">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mi>s</mi><mo stretchy=\\"false\\">)</mo><mo>=</mo><mi>A</mi><mi>d</mi><mi>d</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi></mrow><annotation encoding=\\"application/x-tex\\">Hash(keys)=Address</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.08125em;\\">H</span><span class=\\"mord mathnormal\\">a</span><span class=\\"mord mathnormal\\">s</span><span class=\\"mord mathnormal\\">h</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.03148em;\\">k</span><span class=\\"mord mathnormal\\">eys</span><span class=\\"mclose\\">)</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span><span class=\\"mrel\\">=</span><span class=\\"mspace\\" style=\\"margin-right:0.2778em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6944em;\\"></span><span class=\\"mord mathnormal\\">A</span><span class=\\"mord mathnormal\\">dd</span><span class=\\"mord mathnormal\\">ress</span></span></span></span></p>","autoDesc":true}');export{A as comp,z as data};
