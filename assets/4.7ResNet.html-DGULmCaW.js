import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as l,c as m,d as a,b as s,a as o}from"./app-DCCuR8hw.js";const p={},r=a("h1",{id:"resnet",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#resnet"},[a("span",null,"ResNet")])],-1),c=a("blockquote",null,[a("p",null,"What is ResNet?")],-1),i=a("p",null,[s("简单来说，在模型训练过程中，直接去拟合我们要的"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"x"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"f(x)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mclose"},")")])])]),s("并不容易，但是通过测试发现，直接去拟合"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"x"),a("mo",{stretchy:"false"},")"),a("mo",null,"−"),a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"f(x)-x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s("会容易很多，所以残差网络其实就是在一系列卷积计算过后，先减去一个输入矩阵，再通过激活函数计算输出，这样就相当于拟合了"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"x"),a("mo",{stretchy:"false"},")"),a("mo",null,"−"),a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"f(x)-x")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"x")])])]),s("。")],-1),h={href:"https://tangshusen.me/Dive-into-DL-PyTorch/#/chapter05_CNN/5.11_resnet?id=_511-%e6%ae%8b%e5%b7%ae%e7%bd%91%e7%bb%9c%ef%bc%88resnet%ef%bc%89",target:"_blank",rel:"noopener noreferrer"},d=a("h2",{id:"residual-块",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#residual-块"},[a("span",null,"Residual 块")])],-1),x=a("p",null,"ResNet 沿用了 VGG 中 3×3 卷积层的设计。残差块里首先有 2 个有相同输出通道数的 3×3 卷积层。每个卷积层后接一个批量归一化层和 ReLU 激活函数。然后我们将输入跳过这两个卷积运算后直接加在最后的 ReLU 激活函数前。这样的设计要求两个卷积层的输出与输入形状一样，从而可以相加。如果想改变通道数，就需要引入一个额外的 1×1 卷积层来将输入变换成需要的形状后再做相加运算。",-1),g=a("p",null,"残差块的实现如下。它可以设定输出通道数、是否使用额外的 1×1 卷积层来修改通道数以及卷积层的步幅。",-1);function u(y,f){const t=n("ExternalLinkIcon");return l(),m("div",null,[r,c,i,a("p",null,[s("残差网络的结构可以见"),a("a",h,[s("原文档"),o(t)]),s("，本节主要专注于程序上的实现难点。")]),d,x,g])}const b=e(p,[["render",u],["__file","4.7ResNet.html.vue"]]),k=JSON.parse('{"path":"/code/python/pytorch/4.7ResNet.html","title":"ResNet","lang":"zh-CN","frontmatter":{"description":"ResNet What is ResNet? 简单来说，在模型训练过程中，直接去拟合我们要的f(x)并不容易，但是通过测试发现，直接去拟合f(x)−x会容易很多，所以残差网络其实就是在一系列卷积计算过后，先减去一个输入矩阵，再通过激活函数计算输出，这样就相当于拟合了f(x)−x。 残差网络的结构可以见原文档，本节主要专注于程序上的实现难点。 Resid...","head":[["meta",{"property":"og:url","content":"https://dream-oyh.github.io/code/python/pytorch/4.7ResNet.html"}],["meta",{"property":"og:site_name","content":"Dream_oyh 的 blog"}],["meta",{"property":"og:title","content":"ResNet"}],["meta",{"property":"og:description","content":"ResNet What is ResNet? 简单来说，在模型训练过程中，直接去拟合我们要的f(x)并不容易，但是通过测试发现，直接去拟合f(x)−x会容易很多，所以残差网络其实就是在一系列卷积计算过后，先减去一个输入矩阵，再通过激活函数计算输出，这样就相当于拟合了f(x)−x。 残差网络的结构可以见原文档，本节主要专注于程序上的实现难点。 Resid..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T09:40:30.000Z"}],["meta",{"property":"article:author","content":"OYH"}],["meta",{"property":"article:modified_time","content":"2024-02-26T09:40:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ResNet\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-26T09:40:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OYH\\",\\"email\\":\\"19859860010@163.com\\"}]}"]]},"headers":[{"level":2,"title":"Residual 块","slug":"residual-块","link":"#residual-块","children":[]}],"git":{"createdTime":1708940430000,"updatedTime":1708940430000,"contributors":[{"name":"dream同学0","email":"1399541701@qq.com","commits":1}]},"readingTime":{"minutes":1.19,"words":358},"filePathRelative":"code/python/pytorch/4.7ResNet.md","localizedDate":"2024年2月26日","excerpt":"\\n<blockquote>\\n<p>What is ResNet?</p>\\n</blockquote>\\n<p>简单来说，在模型训练过程中，直接去拟合我们要的<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>f</mi><mo stretchy=\\"false\\">(</mo><mi>x</mi><mo stretchy=\\"false\\">)</mo></mrow><annotation encoding=\\"application/x-tex\\">f(x)</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10764em;\\">f</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">x</span><span class=\\"mclose\\">)</span></span></span></span>并不容易，但是通过测试发现，直接去拟合<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>f</mi><mo stretchy=\\"false\\">(</mo><mi>x</mi><mo stretchy=\\"false\\">)</mo><mo>−</mo><mi>x</mi></mrow><annotation encoding=\\"application/x-tex\\">f(x)-x</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10764em;\\">f</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">x</span><span class=\\"mclose\\">)</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">−</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">x</span></span></span></span>会容易很多，所以残差网络其实就是在一系列卷积计算过后，先减去一个输入矩阵，再通过激活函数计算输出，这样就相当于拟合了<span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mi>f</mi><mo stretchy=\\"false\\">(</mo><mi>x</mi><mo stretchy=\\"false\\">)</mo><mo>−</mo><mi>x</mi></mrow><annotation encoding=\\"application/x-tex\\">f(x)-x</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1em;vertical-align:-0.25em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10764em;\\">f</span><span class=\\"mopen\\">(</span><span class=\\"mord mathnormal\\">x</span><span class=\\"mclose\\">)</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">−</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.4306em;\\"></span><span class=\\"mord mathnormal\\">x</span></span></span></span>。</p>","autoDesc":true}');export{b as comp,k as data};
