import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,d as n,b as o,a as c,e as l}from"./app-B11x1tgs.js";const i={},u=n("h1",{id:"pandas",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pandas"},[n("span",null,"Pandas")])],-1),d=n("h2",{id:"学习",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#学习"},[n("span",null,"学习")])],-1),r={href:"https://pandas.pydata.org/docs/index.html#",target:"_blank",rel:"noopener noreferrer"},k=l(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>poetry <span class="token function">add</span> pandas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构"><span>数据结构</span></a></h2><h3 id="dataframe" tabindex="-1"><a class="header-anchor" href="#dataframe"><span><code>DataFrame</code></span></a></h3><p>二维数组，由列和行组成，第一行为各列的列名，第一列为各行的行索引，在 <code>Pandas</code> 库中，一般用<code>header</code>和<code>index</code>参数来分别表示列名和行名。若<code>header=None</code>,<code>index=None</code>，则说明读取的数据中不存在行索引和列名。</p><p>可以直接定义<code>DataFrame</code>变量，如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;Name&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;Braund, Mr. Owen Harris&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Allen, Mr. William Henry&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Bonnell, Miss. Elizabeth&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Sex&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;female&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="series" tabindex="-1"><a class="header-anchor" href="#series"><span><code>Series</code></span></a></h3><p>一维向量，由值和索引组成，<code>DataFrame</code>中的每一列都是一个<code>Series</code>。</p><p>也可以直接定义<code>Series</code>变量，如：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>s <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="基本命令" tabindex="-1"><a class="header-anchor" href="#基本命令"><span>基本命令</span></a></h2><h3 id="pandas-数据读取与写入" tabindex="-1"><a class="header-anchor" href="#pandas-数据读取与写入"><span>Pandas 数据读取与写入</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 读取 csv 文件</span>
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 读取 excel 文件</span>
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 读取 sql 文件</span>
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 写入 csv 文件</span>
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 写入 excel 文件</span>
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span>fpath<span class="token punctuation">)</span> <span class="token comment"># 写入 sql 文件</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取前几行数据</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token operator">&lt;</span>num<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token comment"># 读取文件最前指定行数数据</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取后几行数据</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token operator">&lt;</span>num<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token comment"># 读取最后指定行数数据</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>shape <span class="token comment"># 读取数据形状</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>columns <span class="token comment"># 读取数据列名</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>index <span class="token comment"># 读取数据行名</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>dtypes <span class="token comment"># 读取每列数据类型</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取数据基本信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>read_*</code>用于读取文件，<code>to_*</code>用于写入文件，其中有些共同的参数，说明如下：</p><p><code>sheet_name</code> 读取或写入工作表名称</p><p><code>header=None</code> 表示该数据没有标题行</p><p><code>index=None</code> 表示该数据没有索引列</p><div class="hint-container tip"><p class="hint-container-title">对于 txt 数据文件</p><p>txt 相较于 csv 不同的是，具有自己指定的分隔符，因此在读取时应该设置分隔符，对于没有定义列名的数据还要自己定义列名。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>fpath<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">&#39;\\t&#39;</span><span class="token punctuation">,</span>header<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;col1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;col2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;col3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 读取 txt 文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>sep</code>参数定义分隔符；</p><p><code>&#39;\\t&#39;</code>代指<code>tab</code>制表符；</p><p><code>names</code>可以指定除去索引列以外的列名；</p></div><h3 id="pandas-数据处理" tabindex="-1"><a class="header-anchor" href="#pandas-数据处理"><span>Pandas 数据处理</span></a></h3><p>Pandas 在处理<code>DataFrame</code>数据时，会自动忽略文本类型数据，只会处理<code>int64</code>,<code>float64</code>数据类型的列。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>DataFrame<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取每列最大值</span>
DataFrame<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 描述性统计</span>
DataFrame<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取每列平均值</span>
DataFrame<span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取每列中位数</span>
DataFrame<span class="token punctuation">.</span>agg<span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token string">&quot;Age&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;min&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;median&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;skew&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Fare&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;min&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;max&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;median&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mean&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>    <span class="token comment"># .agg() 函数提供键值对计算特定列的特定指标</span>
DataFrame<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token operator">&lt;</span>column name<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 按指定列的值分类计算平均值</span>
<span class="token comment"># 其中&lt;column name&gt;支持导入列表，进行多组别的分类</span>
DataFrame<span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 计数</span>
DataFrame<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by <span class="token operator">=</span> <span class="token operator">&lt;</span>column name<span class="token operator">&gt;</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token operator">/</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 按指定列的值排序，ascending 控制升降序</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="访问-dataframe-对象" tabindex="-1"><a class="header-anchor" href="#访问-dataframe-对象"><span>访问 <code>DataFrame</code> 对象</span></a></h3><div class="language-Python line-numbers-mode" data-ext="Python" data-title="Python"><pre class="language-Python"><code>DataFrame.loc[&lt;row index&gt;,&lt;column name&gt;] # 读取指定行和列的数据
DataFrame[&lt;column name&gt;] # 读取指定列的数据
DataFrame[[&lt;column name1,column name2&gt;]] # 参数换成列表，读取多列数据
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="利用逻辑表达式读取特定满足要求的数据" tabindex="-1"><a class="header-anchor" href="#利用逻辑表达式读取特定满足要求的数据"><span>利用逻辑表达式读取特定满足要求的数据</span></a></h3><ul><li><code>DataFrame</code>对象支持通过<code>&gt;</code>或<code>&lt;</code>符号，返回 0，1 矩阵，并以之作为索引，读取指定满足要求的数据。例如：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 读取 A 列大于 2 的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>   A  B
2  3  7
3  4  8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>利用<code>.isin()</code>函数选择指定列中的指定值。例如：</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 读取 A 列等于 2 和等于 4 的数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>   A  B   C
1  2  6  10
3  4  8  12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>支持逻辑表达式运算，<code>|</code>表示或，<code>&amp;</code>表示与，<code>==</code>表示相等，并且每一项逻辑表达式都应该被括号包裹，以确定正确的计算优先级。</li><li><code>DataFrame.loc[&lt;row&gt;,&lt;col&gt;]</code> 其中的<code>&lt;row&gt;</code>支持逻辑表达式、索引名、索引名的冒号表达式（如<code>1:3</code>表示 1~3 列/行，<strong>但是请注意 DataFrame 中的索引是以<code>0</code>开头的</strong>，故除去标题行的第一行的索引是<code>0</code>），<code>&lt;col&gt;</code>支持列名、列名的冒号表达式（如<code>&#39;A&#39;:&#39;C&#39;</code>表示<code>A</code>列到<code>C</code>列）。</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># pandas 支持赋值操作</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>   A  B   C
0  1  0   0
1  2  0   0
2  3  0   0
3  4  8  12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>DataFrame.iloc[&lt;row&gt;,&lt;col&gt;]</code>支持通过单元格在表格中的位置访问数据，支持冒号表达式，但是要注意行列索引值均是从<code>0</code>开始，若要实现上例的效果，代码应该为；<code>df.iloc[0:3,1:3] = 0</code><strong>值得注意的是</strong>，通过实际测试，<code>.loc[]</code>中，列索引<code>&#39;B&#39;:&#39;C&#39;</code>包括左右端点，行索引<code>0:2</code>也包括左右端，但是在<code>.iloc[]</code>中，行列索引，如<code>0:3</code>只包括左端点，不包括右端点，所以<code>0:3</code>只有<code>0</code>、<code>1</code>、<code>2</code>这三行，<code>1:3</code>只有<code>1</code>、<code>2</code>这两列。</li></ul><h3 id="对数据进行计算" tabindex="-1"><a class="header-anchor" href="#对数据进行计算"><span>对数据进行计算</span></a></h3><p><code>Pandas</code>库中可直接调用数学算符（<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>）和逻辑算符（<code>&amp;</code>,<code>|</code>,<code>&gt;</code>,<code>&lt;</code>,<code>==</code>）对数据采取<code>element-wise</code>的计算模式，即各对应元素相除或相乘。并且可以通过<code>df[&quot;column name&quot;]</code>来直接定义新的列，如：<code>df[&#39;prod&#39;] = df[&quot;A&quot;] * df[&quot;B&quot;] * df[&quot;C&quot;]</code>可表示三列的乘积列，并且会自动新建名为<code>prod</code>的新列。</p><h2 id="应用实例" tabindex="-1"><a class="header-anchor" href="#应用实例"><span>应用实例</span></a></h2><h3 id="合并文件夹内多个-csv-文件" tabindex="-1"><a class="header-anchor" href="#合并文件夹内多个-csv-文件"><span>合并文件夹内多个 csv 文件</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> glob
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
extension <span class="token operator">=</span> <span class="token string">&quot;csv&quot;</span>
all_filenames <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">&quot;*.{}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>extension<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
combined_csv <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token keyword">for</span> f <span class="token keyword">in</span> all_filenames <span class="token punctuation">]</span><span class="token punctuation">)</span>
combined_csv<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span> <span class="token string">&quot;combined_csv.csv&quot;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8-sig&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43);function m(v,b){const a=t("ExternalLinkIcon");return e(),p("div",null,[u,d,n("p",null,[n("a",r,[o("官方文档"),c(a)])]),k])}const f=s(i,[["render",m],["__file","pandas.html.vue"]]),y=JSON.parse('{"path":"/code/python/pandas.html","title":"Pandas","lang":"zh-CN","frontmatter":{"date":"2024-02-09T00:00:00.000Z","icon":"pandas","category":"Python 库","tag":"教程","description":"Pandas 学习 官方文档 安装 数据结构 DataFrame 二维数组，由列和行组成，第一行为各列的列名，第一列为各行的行索引，在 Pandas 库中，一般用header和index参数来分别表示列名和行名。若header=None,index=None，则说明读取的数据中不存在行索引和列名。 可以直接定义DataFrame变量，如： Series...","head":[["meta",{"property":"og:url","content":"https://dream-oyh.github.io/code/python/pandas.html"}],["meta",{"property":"og:site_name","content":"Dream_oyh 的 blog"}],["meta",{"property":"og:title","content":"Pandas"}],["meta",{"property":"og:description","content":"Pandas 学习 官方文档 安装 数据结构 DataFrame 二维数组，由列和行组成，第一行为各列的列名，第一列为各行的行索引，在 Pandas 库中，一般用header和index参数来分别表示列名和行名。若header=None,index=None，则说明读取的数据中不存在行索引和列名。 可以直接定义DataFrame变量，如： Series..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-17T14:32:00.000Z"}],["meta",{"property":"article:author","content":"OYH"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:published_time","content":"2024-02-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-17T14:32:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pandas\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-17T14:32:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OYH\\",\\"email\\":\\"19859860010@163.com\\"}]}"]]},"headers":[{"level":2,"title":"学习","slug":"学习","link":"#学习","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[{"level":3,"title":"DataFrame","slug":"dataframe","link":"#dataframe","children":[]},{"level":3,"title":"Series","slug":"series","link":"#series","children":[]}]},{"level":2,"title":"基本命令","slug":"基本命令","link":"#基本命令","children":[{"level":3,"title":"Pandas 数据读取与写入","slug":"pandas-数据读取与写入","link":"#pandas-数据读取与写入","children":[]},{"level":3,"title":"Pandas 数据处理","slug":"pandas-数据处理","link":"#pandas-数据处理","children":[]},{"level":3,"title":"访问 DataFrame 对象","slug":"访问-dataframe-对象","link":"#访问-dataframe-对象","children":[]},{"level":3,"title":"利用逻辑表达式读取特定满足要求的数据","slug":"利用逻辑表达式读取特定满足要求的数据","link":"#利用逻辑表达式读取特定满足要求的数据","children":[]},{"level":3,"title":"对数据进行计算","slug":"对数据进行计算","link":"#对数据进行计算","children":[]}]},{"level":2,"title":"应用实例","slug":"应用实例","link":"#应用实例","children":[{"level":3,"title":"合并文件夹内多个 csv 文件","slug":"合并文件夹内多个-csv-文件","link":"#合并文件夹内多个-csv-文件","children":[]}]}],"git":{"createdTime":1707929375000,"updatedTime":1708180320000,"contributors":[{"name":"dream同学0","email":"1399541701@qq.com","commits":3},{"name":"dream_linux","email":"1399541701@qq.com","commits":2}]},"readingTime":{"minutes":4.51,"words":1352},"filePathRelative":"code/python/pandas.md","localizedDate":"2024年2月9日","excerpt":"\\n<h2>学习</h2>\\n<p><a href=\\"https://pandas.pydata.org/docs/index.html#\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a></p>\\n<h2>安装</h2>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code>poetry <span class=\\"token function\\">add</span> pandas\\n</code></pre></div><h2>数据结构</h2>","autoDesc":true}');export{f as comp,y as data};
